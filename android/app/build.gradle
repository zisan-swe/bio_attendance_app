plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

android {
    namespace "com.example.bio_attendance_app"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion "27.0.12077973"

    defaultConfig {
        applicationId "com.example.bio_attendance_app"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutter.versionCode
        versionName flutter.versionName
        consumerProguardFiles 'consumer-rules.pro'
        multiDexEnabled true  // Added: Safe for large APKs with SDK libs
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
        }  // Essential for SLK20R
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions { jvmTarget = '1.8' }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
        }
        release {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            // Optional: Add ProGuard rules for SDK if enabling minify
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Quiet that Flutter lint hint (harmless)
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

flutter { source '../..' }

// 🔒 Make Gradle search the *exact* app/libs folder
repositories {
    flatDir { dirs "${project.projectDir}/libs" }
}

dependencies {
    implementation files('libs/zkandroidfpreader.jar')
    implementation files('libs/zkandroidcore.jar')
    implementation files('libs/zkandroidfingerservice.jar')
    // Added: MultiDex for runtime safety (if needed)
    implementation 'androidx.multidex:multidex:2.0.1'
}

// 🛠️ Helpful check: fail early if any JAR is missing
afterEvaluate {
    ["zkandroidcore.jar", "zkandroidfingerservice.jar", "zkandroidfpreader.jar"].each { n ->
        def f = file("${project.projectDir}/libs/${n}")
        if (!f.exists()) {
            throw new GradleException("Missing SDK file: ${f}")
        }
    }
}